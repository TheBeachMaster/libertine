set -o errexit +o hashall

function installEssentialFolderStructure()
{
	# removes everything from the target bar /opt/lfs, /srv and /var (we could add /home; that's not so clear-cut)
	local folder
	if [ -d "$LFS" ]; then
		pushd "$LFS" >/dev/null
			for folder in *
			do
				case "$folder" in
					
					opt|srv|var)
						:
					;;
					
					*)
						chattr -R -f -ai "$folder" >/dev/null || true
						rm -rf -- "$folder"
					;;
					
				esac
			done
			
			if [ -d "opt" ]; then
				pushd "opt" >/dev/null
					for folder in *
					do
						if [ "$folder" != "lfs" ]; then
							chattr -R -f -ai "$folder" >/dev/null || true
							rm -rf -- "$folder"
						fi
					done
				popd >/dev/null
			fi
			
		popd >/dev/null
	fi
	
	# boot and var will in future be mount points
	# boot is rather unpleasant
	
	local item
	for item in boot dev media mnt opt proc run sys var
	do
		folder="$LFS"/"$item"
		if [ -d "$folder" ]; then
			chown 0:0 "$folder"
			chmod 0755 "$folder"
		else
			mkdir -m 0755 -p "$folder"
		fi
	done
	
	# /dev
		folder="$LFS"/dev
		# Required by the kernel to boot before udevd is started
		if [ ! -c "$folder"/console ]; then
			rm -f "$folder"/console
			mknod -m 600 "$folder"/console c 5 1
		fi
		if [ ! -c "$folder"/null ]; then
			rm -f "$folder"/null
			mknod -m 666 "$folder"/null c 1 3
		fi
	
	# /media
		for item in floppy cdrom cdrecorder zip
		do
			folder="$LFS"/mnt/"$item"
			if [ -d "$folder" ]; then
				chown 0:0 "$folder"
				chmod 0755 "$folder"
			else
				mkdir -m 0755 -p "$folder"
			fi
		done
	
	# /tmp /var/tmp /run/lock (the latter will probably end up being hidden by a mount point, but needs to exist for /var/lock)
		for item in tmp var/tmp run/lock
		do
			folder="$LFS"/"$item"
			if [ -d "$folder" ]; then
				chown 0:0 "$folder"
				chmod 1775 "$folder"
			else
				mkdir -m 1775 -p "$folder"
			fi
		done
	
	# /opt defaults (not used by us except for lfs but here for completeness)
		for item in bin doc include info lib lfs man
		do
			folder="$LFS"/opt/"$item"
			if [ -d "$folder" ]; then
				chown 0:0 "$folder"
				chmod 0755 "$folder"
			else
				mkdir -m 0755 -p "$folder"
			fi
		done
	
	# /var defaults
		# srv is our own invention
		for item in account cache crash games home lib local log mail opt spool srv yp
		do
			folder="$LFS"/var/"$item"
			if [ -d "$folder" ]; then
				chown 0:0 "$folder"
				chmod 0755 "$folder"
			else
				mkdir -m 0755 -p "$folder"
			fi
		done

		folder="$LFS"/var/run
		if [ ! -L "$folder" ]; then
			ln -s ../run "$folder"
		fi

		folder="$LFS"/var/lock
		if [ ! -L "$folder" ]; then
			ln -s ../run/lock "$folder"
		fi
	
	# /home /srv
		for item in home srv
		do
			folder="$LFS"/"$item"
			if [ ! -L "$folder" ]; then
				ln -s var/"$item" "$folder"
			fi
		done
	
	# /root
	folder="$LFS"/root
	if [ -d "$folder" ]; then
		chown 0:0 "$folder"
		chmod 0750 "$folder"
	else
		mkdir -m 0750 -p "$folder"
	fi
	

	# Install a single, pivotable symlink so we can change over all paths in one atomic transistion
	local pivotSymlink="$LFS"/mnt/lfs-pivot
	if [ ! -L "$pivotSymlink" ]; then
		ln -s "$LFS_DEPENDENCY_PREFIX_PATH_ZZZ" "$pivotSymlink"
	fi
	
	# Reference folders inside pivot
	for item in bin etc lib libx32 lib32 lib64 sbin usr
	do
		folder="$LFS"/"$item"
		
		if [ ! -L "$folder" ]; then
			ln -s mnt/lfs-pivot/"$item" "$folder"
		fi
	done
}
