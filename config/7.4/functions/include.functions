set -o errexit +o hashall

function doInclude()
{
	includeMirrors
	includeProfiles
}

function includeMirrors()
{
	progressMessage "Including mirror $mirrors"
	
	pushd "$mirrorsPath" >/dev/null
		
		include_mirror "$mirrors"
		
	popd >/dev/null
	
	local requiredMirrorName
	for requiredMirrorName in "${!keyrings_Mirror[@]}" "${!keys_Mirror[@]}" "${!sourcePackages_Mirror[@]}" "${!patches_Mirror[@]}"
	do
		if ! mirrorExists "$requiredMirrorName"; then
			progressMessageFailed "Mirror $requiredMirrorName is not defined in mirrors $mirrors"
		fi
	done
	
	progressMessageSucceeded
}

function include_phase()
{
	local -r phase="$1"
	shift 1
	
	pushd "$profilesPath" >/dev/null
		
		declare -A LFS_RECIPE_VERSIONS
		declare -A LFS_RECIPE_VERSION
		for profile in "$@"
		do
			progressMessage "Including phase $phase profile $profile"
			LFS_PHASE="$phase" include_profile "$profile"
			progressMessageSucceeded
		done
		declare -A LFS_RECIPE_VERSION
		unset LFS_RECIPE_VERSIONS
		
	popd >/dev/null
}

function includeProfiles()
{
	include_phase crosscompiler "$crosscompilerProfile"
	include_phase toolchain2 "$toolchain2Profile"
	include_phase system $profiles
}
