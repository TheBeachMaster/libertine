set -o errexit +o hashall

function pathToRootOfChroot()
{
	local -r pathRootedInOpt="$1"

	local relativePathToRootOfFhsWithTrailingSlash="$(echo -n "$pathRootedInOpt" | awk -v RS='/' -v ORS='../' 'NR !=1 {print ""}')"
	PathToRoot="${relativePathToRootOfFhsWithTrailingSlash:0:${#relativePathToRootOfFhsWithTrailingSlash}-1}"
}

function installEssentialFolderStructure()
{
	# removes everything from the target bar /opt/lfs, /srv and /var (we could add /home; that's not so clear-cut)
	local folder
	if [ -d "$LFS" ]; then
		pushd "$LFS" >/dev/null
			for folder in *
			do
				case "$folder" in
					
					opt|srv|var)
						:
					;;
					
					*)
						chattr -R -f -ai "$folder" >/dev/null || true
						rm -rf -- "$folder"
					;;
					
				esac
			done
			
			if [ -d "opt" ]; then
				pushd "opt" >/dev/null
					for folder in *
					do
						if [ "$folder" != "lfs" ]; then
							chattr -R -f -ai "$folder" >/dev/null || true
							rm -rf -- "$folder"
						fi
					done
				popd >/dev/null
			fi
			
		popd >/dev/null
	fi
	
	# usr/local/etc exists occasionally. Why there isn't /usr/etc isn't clear.
	for folder in bin boot dev proc etc home lib media mnt opt root run sbin srv sys usr var usr/local usr/local/etc
	do
		if [ -d "$folder" ]; then
			chown 0:0 "$folder"
			chmod 0755 "$folder"
		else
			mkdir -m 0775 -p "$LFS"/"$folder"
		fi
	done
	
	# Required by the kernel to boot before udevd is started
	mknod -m 600 "$LFS"/dev/console c 5 1
	mknod -m 666 "$LFS"/dev/null c 1 3
	
	for folder in tmp var/tmp
	do
		mkdir -m 1775 -p "$LFS"/"$folder"
	done
	
	mkdir -m 0750 -p "$LFS"/root
	
	# libexec is a horrible idea, but it persists in some packages and it's best not to rock the boat
	for folder in X11R6 bin include lib libexec sbin src
	do
		mkdir -m 0775 -p "$LFS"/usr/"$folder" "$LFS"/usr/local/"$folder"
	done
	
	case "$LFS_ARCHITECTURE" in
		x86_64)
			ln -s lib "$LFS"/lib64
			ln -s lib "$LFS"/usr/lib64
			ln -s lib "$LFS"/usr/local/lib64
		;;
		x86_32)
			ln -s lib "$LFS"/lib32
			ln -s lib "$LFS"/usr/lib32
			ln -s lib "$LFS"/usr/local/lib32
		;;
	esac
	
	for folder in doc info locale man misc terminfo zoneinfo dict sgml xml
	do
		mkdir -m 0775 -p "$LFS"/usr/share/"$folder" "$LFS"/usr/local/share/"$folder"
	done
	
	for folder in man1 man2 man3 man4 man5 man6 man7 man8
	do
		mkdir -m 0775 -p "$LFS"/usr/share/man/"$folder" "$LFS"/usr/local/share/man/"$folder"
	done
	
	rm -rf -- "$LFS"/var/run
	ln -s /run "$LFS"/var/run
	
	rm -rf -- "$LFS"/var/lock
	ln -s /run/lock "$LFS"/var/lock
	
	# ? should we be symlinking /var/lib? what about /var/lib/hwclock,misc, /var/spool/cron
	for folder in account cache crash games lib local log mail opt spool tmp yp
	do
		rm -rf -- "$LFS"/var/"$folder"
		ln -s /var/"$folder" "$LFS"/var/"$folder"
	done
	
	for folder in man doc info
	do
		ln -s share/"$folder" "$LFS"/usr/"$folder"
		ln -s share/"$folder" "$LFS"/usr/local/"$folder"
	done
	
	ln -s /proc/self/mounts "$LFS"/etc/mtab
}

# We do nothing
function installPerPackageFhs_NEW()
{
	:
}

function installPerPackageFhs()
{
	pathToRootOfChroot
	
	ln -s "$PathToRoot"/dev "$LFS_DEPENDENCY_INSTALL_PATH"/dev
	ln -s "$PathToRoot"/proc "$LFS_DEPENDENCY_INSTALL_PATH"/proc
	ln -s "$PathToRoot"/sys "$LFS_DEPENDENCY_INSTALL_PATH"/sys
	
	local folder
	for folder in bin boot etc home lib opt sbin srv usr var etc/opt usr/local
	do
		sudo -u \#${LFS_DEPENDENCY_UID} -g \#${LFS_DEPENDENCY_GID} -- mkdir -m 0775 -p "$LFS_DEPENDENCY_INSTALL_PATH"/"$folder"
	done
	
	sudo -u \#${LFS_DEPENDENCY_UID} -g \#${LFS_DEPENDENCY_GID} -- mkdir -m 0750 -p "$LFS_DEPENDENCY_INSTALL_PATH"/root
	
	ln -s "$PathToRoot"/media "$LFS_DEPENDENCY_INSTALL_PATH"/media
	ln -s "$PathToRoot"/mnt "$LFS_DEPENDENCY_INSTALL_PATH"/mnt
	ln -s "$PathToRoot"/run "$LFS_DEPENDENCY_INSTALL_PATH"/run
	ln -s "$PathToRoot"/tmp "$LFS_DEPENDENCY_INSTALL_PATH"/tmp
	
	ln -s "$PathToRoot"/run "$LFS_DEPENDENCY_INSTALL_PATH"/var/run
	ln -s "$PathToRoot"/run/lock "$LFS_DEPENDENCY_INSTALL_PATH"/var/lock
	
	case "$LFS_ARCHITECTURE" in
		x86_64)
			ln -s lib "$LFS_DEPENDENCY_INSTALL_PATH"/lib64
			ln -s lib "$LFS_DEPENDENCY_INSTALL_PATH"/usr/lib64
			ln -s lib "$LFS_DEPENDENCY_INSTALL_PATH"/usr/local/lib64
		;;
		x86_32)
			ln -s lib "$LFS_DEPENDENCY_INSTALL_PATH"/lib32
			ln -s lib "$LFS_DEPENDENCY_INSTALL_PATH"/usr/lib32
			ln -s lib "$LFS_DEPENDENCY_INSTALL_PATH"/usr/local/lib32
		;;
	esac
	
	# libexec is a horrible idea, but it persists in some packages and it's best not to rock the boat
	for folder in X11R6 bin include lib libexec sbin src
	do
		sudo -u \#${LFS_DEPENDENCY_UID} -g \#${LFS_DEPENDENCY_GID} -- mkdir -m 0775 -p "$LFS_DEPENDENCY_INSTALL_PATH"/usr/"$folder" "$LFS_DEPENDENCY_INSTALL_PATH"/usr/local/"$folder"
	done
	
	for folder in doc info locale man misc terminfo zoneinfo dict sgml xml
	do
		sudo -u \#${LFS_DEPENDENCY_UID} -g \#${LFS_DEPENDENCY_GID} -- mkdir -m 0775 -p "$LFS_DEPENDENCY_INSTALL_PATH"/usr/share/"$folder" "$LFS_DEPENDENCY_INSTALL_PATH"/usr/local/share/"$folder"
	done
	
	for folder in man1 man2 man3 man4 man5 man6 man7 man8
	do
		sudo -u \#${LFS_DEPENDENCY_UID} -g \#${LFS_DEPENDENCY_GID} -- mkdir -m 0775 -p "$LFS_DEPENDENCY_INSTALL_PATH"/usr/share/man/"$folder" "$LFS_DEPENDENCY_INSTALL_PATH"/usr/local/share/man/"$folder"
	done
	
	# ? should we be symlinking /var/lib? what about /var/lib/hwclock,misc, /var/spool/cron, /var/lib/locate
	for folder in account cache crash games lib local log mail opt spool tmp yp
	do
		ln -s "$PathToRoot"/var/"$folder" "$LFS_DEPENDENCY_INSTALL_PATH"/var/"$folder"
	done
	
	for folder in man doc info
	do
		ln -s share/"$folder" "$LFS_DEPENDENCY_INSTALL_PATH"/usr/"$folder"
		ln -s share/"$folder" "$LFS_DEPENDENCY_INSTALL_PATH"/usr/local/"$folder"
	done
	
	ln -s "$PathToRoot"/proc/self/mounts "$LFS_DEPENDENCY_INSTALL_PATH"/etc/mtab
}
