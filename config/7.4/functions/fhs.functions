set -o errexit +o hashall

function pathToRootOfChroot()
{
	local -r pathRootedInOpt="$1"

	local -r relativePathToRootOfFhsWithTrailingSlash="$(echo -n "$pathRootedInOpt" | awk -v RS='/' -v ORS='../' 'NR !=1 {print ""}')"
	PathToRoot="${relativePathToRootOfFhsWithTrailingSlash:0:${#relativePathToRootOfFhsWithTrailingSlash}-1}"
}

function installEssentialFolderStructure()
{
	# removes everything from the target bar /opt/lfs, /srv and /var (we could add /home; that's not so clear-cut)
	local folder
	if [ -d "$LFS" ]; then
		pushd "$LFS" >/dev/null
			for folder in *
			do
				case "$folder" in
					
					opt|srv|var)
						:
					;;
					
					*)
						chattr -R -f -ai "$folder" >/dev/null || true
						rm -rf -- "$folder"
					;;
					
				esac
			done
			
			if [ -d "opt" ]; then
				pushd "opt" >/dev/null
					for folder in *
					do
						if [ "$folder" != "lfs" ]; then
							chattr -R -f -ai "$folder" >/dev/null || true
							rm -rf -- "$folder"
						fi
					done
				popd >/dev/null
			fi
			
		popd >/dev/null
	fi
	
	# boot and var will in future be mount points
	# boot is rather unpleasant
	
	local item
	for item in boot dev media mnt opt proc run sys var
	do
		folder="$LFS"/"$item"
		if [ -d "$folder" ]; then
			chown 0:0 "$folder"
			chmod 0755 "$folder"
		else
			mkdir -m 0755 -p "$folder"
		fi
	done
	
	# /dev
		folder="$LFS"/dev
		# Required by the kernel to boot before udevd is started
		if [ ! -c "$folder"/console ]; then
			rm -f "$folder"/console
			mknod -m 600 "$folder"/console c 5 1
		fi
		if [ ! -c "$folder"/null ]; then
			rm -f "$folder"/null
			mknod -m 666 "$folder"/null c 1 3
		fi
	
	# /media
		for item in floppy cdrom cdrecorder zip
		do
			folder="$LFS"/mnt/"$item"
			if [ -d "$folder" ]; then
				chown 0:0 "$folder"
				chmod 0755 "$folder"
			else
				mkdir -m 0755 -p "$folder"
			fi
		done
	
	# /tmp & /var/tmp
		for item in tmp var/tmp
		do
			folder="$LFS"/"$item"
			if [ -d "$folder" ]; then
				chown 0:0 "$folder"
				chmod 1775 "$folder"
			else
				mkdir -m 1775 -p "$folder"
			fi
		done
	
	# /opt defaults (not used by us but for completeness)
		for item in bin doc include info lib man
		do
			folder="$LFS"/opt/"$item"
			if [ -d "$folder" ]; then
				chown 0:0 "$folder"
				chmod 0755 "$folder"
			else
				mkdir -m 0755 -p "$folder"
			fi
		done
	
	# /var defaults
		# srv is our own invention
		for item in account cache crash games home lib local log mail opt spool srv yp
		do
			folder="$LFS"/var/"$item"
			if [ -d "$folder" ]; then
				chown 0:0 "$folder"
				chmod 0755 "$folder"
			else
				mkdir -m 0755 -p "$folder"
			fi
		done
		ln -s ../run "$LFS"/var/run
		ln -s ../run/lock "$LFS"/var/lock
	
	# /srv (special case by us)
		ln -s var/srv "$LFS"/srv
	
	# /home (special case by us)
		ln -s var/home "$LFS"/home
	
	# /root
	folder="$LFS"/root
	if [ -d "$folder" ]; then
		chown 0:0 "$folder"
		chmod 0750 "$folder"
	else
		mkdir -m 0750 -p "$folder"
	fi
	

	# Install a single, pivotable symlink - needs to be done LAST in zzz-lfs!!!
	local pivotSymlink="$LFS"/mnt/lfs-pivot
	ln -s "$LFS_DEPENDENCY_PREFIX_PATH_ZZZ" "$pivotSymlink"
	# TODO: CREATE usr/*, etc in zzz-lfs
	for item in bin etc lib lib32 lib64 usr
	do
		folder="$LFS"/"$item"
		
		mkdir -m 0755 -p "$LFS_DEPENDENCY_INSTALL_PATH"/"$item"
		
		if [ ! -L "$folder" ]; then
			ln -s mnt/lfs-pivot/"$item" "$folder"
		fi
	done
	
	# /usr in pivot
		# libexec is a horrible idea, but it persists in some packages and it's best not to rock the boat
		for item in X11R6 bin include lib lib32 lib64 libexec sbin src
		do
			mkdir -m 0775 -p "$LFS_DEPENDENCY_INSTALL_PATH"/usr/"$item" "$LFS_DEPENDENCY_INSTALL_PATH"/usr/local/"$item"
		done
	
		for item in doc info locale man misc terminfo zoneinfo dict sgml xml
		do
			mkdir -m 0775 -p "$LFS_DEPENDENCY_INSTALL_PATH"/usr/share/"$item" "$LFS_DEPENDENCY_INSTALL_PATH"/usr/local/share/"$item"
		done
	
		for item in man1 man2 man3 man4 man5 man6 man7 man8
		do
			mkdir -m 0775 -p "$LFS_DEPENDENCY_INSTALL_PATH"/usr/share/man/"$item" "$LFS_DEPENDENCY_INSTALL_PATH"/usr/local/share/man/"$item"
		done
	
		for item in man doc info
		do
			ln -s share/"$folder" "$LFS_DEPENDENCY_INSTALL_PATH"/usr/"$item"
			ln -s share/"$folder" "$LFS_DEPENDENCY_INSTALL_PATH"/usr/local/"$item"
		done
	
	# /etc set up
		mkdir -m 0755 -p "$LFS_DEPENDENCY_INSTALL_PATH"/etc/opt
		ln -s /proc/self/mounts "$LFS_DEPENDENCY_INSTALL_PATH"/etc/mtab
}

# We do nothing
function installPerPackageFhs()
{
	:
}
