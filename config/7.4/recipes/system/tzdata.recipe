set -o errexit +o hashall

version 2013d
{
	#depends glibc
	depends 0-directories
	
	# TODO: Releases may be made as little as 5 days apart!
	source_package_with_download IANA time-zones/repository/releases/"${LFS_SOURCE_PACKAGE_NAME}${LFS_SOURCE_PACKAGE_VERSION["${LFS_SOURCE_PACKAGE_NAME}"]}".tar.gz MD5:65b6818162230fc02f86f293376c73df,HKP:62AA7E34:"${LFS_SOURCE_PACKAGE_NAME}${LFS_SOURCE_PACKAGE_VERSION["${LFS_SOURCE_PACKAGE_NAME}"]}".tar.gz.asc "${LFS_SOURCE_PACKAGE_NAME}${LFS_SOURCE_PACKAGE_VERSION["${LFS_SOURCE_PACKAGE_NAME}"]}" gzip is-tarbomb
	
	directory /usr/share/zoneinfo 755 root root D ai
	directory /usr/share/zoneinfo/posix 755 root root D ai
	directory /usr/share/zoneinfo/right 755 root root D ai
	
	permissions_after /usr/share/zoneinfo/zone.tab 644 root root jS ai
	permissions_after /usr/share/zoneinfo/iso3166.tab 644 root root jS ai
	
	permissions_after_recursive /usr/share/zoneinfo 755 root root D ai 0 10 directory
	permissions_after_recursive /usr/share/zoneinfo 644 root root D ai 0 10 file
}

function installPackage_system_tzdata()
{
	local -r zoneinfoPath=/usr/share/zoneinfo
	
	local timezoneRegion
	for timezoneRegion in "${settings_timezone_Regions[@]}"
	do
		zic -L /dev/null   -d "$zoneinfoPath"       -y "sh yearistype.sh" "$timezoneRegion"
		zic -L /dev/null   -d "$zoneinfoPath"/posix -y "sh yearistype.sh" "$timezoneRegion"
		zic -L leapseconds -d "$zoneinfoPath"/right -y "sh yearistype.sh" "$timezoneRegion"
	done
	
	# TODO: Zic creates directories - set perms on these
	# TODO: Zic creates files - set perms on these
	
	cp -v zone.tab iso3166.tab "$zoneinfoPath"
	
	# Creates 'posixrules' that matches US daylight saving (a requirement)
	zic -d "$zoneinfoPath" -p "${settings_string[LFS_TIMEZONE_POSIXRULES]}"
	
	# We hardlink, which will break any separate /usr mount
	rm -rf -- /etc/localtime
	ln /usr/share/zoneinfo/"${settings_string[LFS_TIMEZONE_TARGET]}" /etc/localtime
}

#TODO: Post-install file clean-up.