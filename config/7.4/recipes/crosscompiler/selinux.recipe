set -o errexit +o hashall

version 20131030
{
	depends musl-cross
	depends pcre
	
	#include checkpolicy 2.2
	include libselinux 2.2.1
	#include libsemanage 2.2
	include libsepol 2.2
	#include policycoreutils 2.2.2
	#include sepolgen 1.2.1
}

# libsepol depends on libselinux and libpcre; remember this when static linking (we're going to rapidly have some nasty problems)
# -rpath is almost certainly broken
function install_crosscompiler_selinux()
{
	pushd libsepol >/dev/null
		
		# In this MAKEFILE, LDFLAGS is actually respected but is as -Wl, style (ie passed via gcc)
		buildUsingMakeExternal DESTDIR="$LFS_DEPENDENCY_INSTALL_PATH" install
	
	popd  >/dev/null
	
	pushd libselinux >/dev/null
		
		# booleans.c seems to rely on glibc's dirent.h macros
		
		# From http://harmattan-dev.nokia.com/docs/library/html/manpages/headers/dirent.html
		mv src/booleans.c src/booleans.c.orig
		cat >src/booleans.c <<-'EOF'
			/* Added by us */
			#ifdef _DIRENT_HAVE_D_NAMLEN
			# undef _DIRENT_HAVE_D_NAMLEN
			#endif
			#ifndef _DIRENT_HAVE_D_RECLEN
			# define _DIRENT_HAVE_D_RECLEN
			#endif
		
			/* These macros extract size information from a `struct dirent *'.
			   They may evaluate their argument multiple times, so it must not
			   have side effects.  Each of these may involve a relatively costly
			   call to `strlen' on some systems, so these values should be cached.

			   _D_EXACT_NAMLEN (DP) returns the length of DP->d_name, not including
			   its terminating null character.

			   _D_ALLOC_NAMLEN (DP) returns a size at least (_D_EXACT_NAMLEN (DP) + 1);
			   that is, the allocation size needed to hold the DP->d_name string.
			   Use this macro when you don't need the exact length, just an upper bound.
			   This macro is less likely to require calling `strlen' than _D_EXACT_NAMLEN.
			   */

			#ifdef _DIRENT_HAVE_D_NAMLEN
			# define _D_EXACT_NAMLEN(d) ((d)->d_namlen)
			# define _D_ALLOC_NAMLEN(d) (_D_EXACT_NAMLEN (d) + 1)
			#else
			# define _D_EXACT_NAMLEN(d) (strlen ((d)->d_name))
			# ifdef _DIRENT_HAVE_D_RECLEN
			#  define _D_ALLOC_NAMLEN(d) (((char *) (d) + (d)->d_reclen) - &(d)->d_name[0])
			# else
			#  define _D_ALLOC_NAMLEN(d) (sizeof (d)->d_name > 1 ? sizeof (d)->d_name : \
			                              _D_EXACT_NAMLEN (d) + 1)
			# endif
			#endif
		EOF
		cat src/booleans.c.orig >>src/booleans.c
		
		cp src/procattr.c src/procattr.c.orig
		patch -Np1 <<-'EOF'
			--- old/src/procattr.c	2013-11-19 16:43:00.000000000 +0000
			+++ new/src/procattr.c	2013-11-19 17:00:47.000000000 +0000
			@@ -24,13 +24,9 @@
			 static int destructor_key_initialized = 0;
			 static __thread char destructor_initialized;
 
			-extern void *__dso_handle __attribute__ ((__weak__, __visibility__ ("hidden")));
			-extern int __register_atfork (void (*) (void), void (*) (void), void (*) (void), void *);
			-
			 static int __selinux_atfork (void (*prepare) (void), void (*parent) (void), void (*child) (void))
			 {
			-  return __register_atfork (prepare, parent, child,
			-                            &__dso_handle == NULL ? NULL : __dso_handle);
			+  return pthread_atfork (prepare, parent, child);
			 }
 
			 static pid_t gettid(void)
		EOF
		
		# add reference to readv()
		mv src/setrans_client.c src/setrans_client.c.orig
		cat >src/setrans_client.c <<-'EOF'
			#include <sys/uio.h>
		EOF
		cat src/setrans_client.c.orig >>src/setrans_client.c
		
		# fix incorrect headers
		cp utils/matchpathcon.c utils/matchpathcon.c.orig
		sed -i -e 's;#include <sys/errno.h>;#include <errno.h>;g' utils/matchpathcon.c
		cp utils/selinux_check_securetty_context.c utils/selinux_check_securetty_context.c.orig
		sed -i -e 's;#include <sys/errno.h>;#include <errno.h>;g' utils/selinux_check_securetty_context.c
		
		local -r prceRelativeInstallPath="$(dependencyPath pcre)"/install
		local -r prceAbsoluteInstallPath="${LFS}${prceRelativeInstallPath}"
		
		LFS_C_TARGET_EXTERNAL_CFLAGS="$LFS_C_TARGET_EXTERNAL_CFLAGS -I${prceAbsoluteInstallPath}/include" \
		LFS_C_TARGET_EXTERNAL_LDFLAGS="$LFS_C_TARGET_EXTERNAL_LDFLAGS -L${prceAbsoluteInstallPath}/lib -Wl,-rpath-link=$prceAbsoluteInstallPath/lib -Wl,-rpath=$prceRelativeInstallPath/lib" \
			buildUsingMakeExternal DESTDIR="$LFS_DEPENDENCY_INSTALL_PATH" install
	
	popd  >/dev/null
}
