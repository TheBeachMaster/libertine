set -o errexit +o hashall

version 4.8.1
{
	include gcc 4.8.1
	include mpfr 3.1.2
	include gmp 5.1.2
	include mpc 1.0.1
	include binutils 2.23.2
}

function installPackage_crosscompiler_gcc()
{
	local -r linuxInstallPath="${LFS}$(dependencyPath linux)"/install
	
	pushdDependencyFolder

		# http://stackoverflow.com/questions/1726042/recipe-for-compiling-binutils-gcc-together
		
		local dependencyName
		for dependencyName in mpfr gmp mpc
		do
			ln -sv ../"$dependencyName" "$dependencyName"
		done
		local binutilsFile
		for binutilsFile in ../binutils/*
		do
			# suppress existing entries
			ln -sv "$binutilsFile" 2>/dev/null || true
		done
		
		# Stack protection fix for glibc-2.18
		sed -i '/k prot/agcc_cv_libc_provides_ssp=yes' gcc/configure
	
		# with-native-system-header-dir specifies a path that does not exist at this point in time (we haven't installed linux). Should not be a problem.
		createBuildFolderAndPushd
		
			# --without-headers --with-newlib ensures that libgcc is built without any header files or other libraries
			../"$LFS_DEPENDENCY_NAME"/configure        \
			--target="$LFS_TARGET"                              \
			--prefix="$LFS_DEPENDENCY_PREFIX_PATH"           \
			--with-sysroot="$LFS"                            \
			--with-newlib                                    \
			--without-headers                                \
			--with-local-prefix="$LFS_DEPENDENCY_PREFIX_PATH"                       \
			--with-native-system-header-dir="$linuxInstallPath"/usr/include   \
			--disable-nls                                    \
			--disable-shared                                 \
			--disable-multilib                               \
			--disable-decimal-float                          \
			--disable-threads                                \
			--disable-libatomic                              \
			--disable-libgomp                                \
			--disable-libitm                                 \
			--disable-libmudflap                             \
			--disable-libquadmath                            \
			--disable-libsanitizer                           \
			--disable-libssp                                 \
			--disable-libgcj \
			--disable-libada \
			--disable-libstdc++-v3                           \
			--enable-ld \
			--enable-gold=default \
			--enable-languages=c
		
			make

			make DESTDIR="$LFS" install

			# Using --disable-shared means that the libgcc_eh.a file isn't created and installed. The Glibc package depends on this library as it uses -lgcc_eh within its build system.
			# This dependency can be satisfied by creating a symlink to libgcc.a, since that file will end up containing the objects normally contained in libgcc_eh.a: 
		
			#local -r gcc=${LFS}${$LFS_DEPENDENCY_PREFIX_PATH}/bin/${LFS_TARGET}-gcc
			#ln -sv libgcc.a "$(${gcc} -print-libgcc-file-name | sed 's/libgcc/&_eh/')"

		popdBuildFolder
	
	popdDepdendencyFolder
}
