set -o errexit +o hashall

version 1.21.1
{
	depends musl-cross
	depends selinux
}

function install_crosscompiler_busybox()
{
	# libselinux depends on libpcre
	local -r prceRelativeInstallPath="$(dependencyPath pcre)"/install
	local -r prceAbsoluteInstallPath="${LFS}${prceRelativeInstallPath}"
	
	# busybox selinux functionality
	local -r selinuxRelativeInstallPath="$(dependencyPath selinux)"/install
	local -r selinuxAbsoluteInstallPath="${LFS}${selinuxRelativeInstallPath}"
	
	# busybox vi regex functionality assumes gnu regex, which oniguruma provides
	local -r onigurumaRelativeInstallPath="$(dependencyPath oniguruma)"/install
	local -r onigurumaAbsoluteInstallPath="${LFS}${onigurumaRelativeInstallPath}"
	
	pushdDependencyFolder
		
		local -ir inclusiveUserId=${settings_integer[LFS_INCLUSIVE_USER_UID]}
		local -ir lastSystemId=$((inclusiveUserId-1))
		
		declare -A busyboxConfiguration
		declare -A busyboxConfigurationUnquoted
		busyboxConfiguration["CONFIG_CROSS_COMPILER_PREFIX"]="$LFS_C_TARGET_EXTERNAL_PREFIX"
		busyboxConfiguration["CONFIG_SYSROOT"]="$LFS_C_TARGET_EXTERNAL_SYS_ROOT"
		busyboxConfiguration["CONFIG_EXTRA_CFLAGS"]="-I${selinuxAbsoluteInstallPath}/usr/include -I${onigurumaAbsoluteInstallPath}/include"
		busyboxConfiguration["CONFIG_EXTRA_LDFLAGS"]="-L${selinuxAbsoluteInstallPath}/usr/lib -L${prceAbsoluteInstallPath}/lib -L${onigurumaAbsoluteInstallPath}/lib"
		busyboxConfiguration["CONFIG_EXTRA_LDLIBS"]="-lpcre -lsepol -lselinux -lonig"
		busyboxConfiguration["CONFIG_PREFIX"]="$LFS_DEPENDENCY_INSTALL_PATH"
		busyboxConfiguration["CONFIG_DEFAULT_MODULES_DIR"]="/lib/modules"
		busyboxConfiguration["CONFIG_FEATURE_CROND_DIR"]="/var/spool/cron"
		busyboxConfiguration["CONFIG_IFUPDOWN_IFSTATE_PATH"]="/var/run/ifstate"
		busyboxConfiguration["CONFIG_DHCPD_LEASES_FILE"]="/var/lib/misc/udhcpd.leases"
		busyboxConfiguration["CONFIG_UDHCPC_DEFAULT_SCRIPT"]="/usr/share/udhcpc/default.script"
		busyboxConfiguration["CONFIG_PREFIX"]="./_install"

		declare -A busyboxConfigurationUnquoted
		# We disable this because it requires GNU libc regex
		busyboxConfigurationUnquoted["CONFIG_FEATURE_VI_REGEX_SEARCH"]="n"
		# We disable this because it makes grep.c (and not yet, awk.c) use GNU regex
		busyboxConfigurationUnquoted["CONFIG_EXTRA_COMPAT"]="n"
		busyboxConfigurationUnquoted["CONFIG_FIRST_SYSTEM_ID"]="${settings_integer[LFS_INCLUSIVE_SYSTEM_UID]}"
		busyboxConfigurationUnquoted["CONFIG_LAST_SYSTEM_ID"]="$lastSystemId"
		
		cp "$LFS_DEPENDENCY_PACKAGE_PATH"/config .config
		
		local key
		local value
		for key in "${!busyboxConfiguration[@]}"
		do
			value="${busyboxConfiguration["$key"]}"
			sed -i -e 's;^'${key}'=.*$;'${key}'="'"$value"'";g' .config
		done
		
		for key in "${!busyboxConfigurationUnquoted[@]}"
		do
			value="${busyboxConfigurationUnquoted["$key"]}"
			sed -i -e 's;^'${key}'=.*$;'${key}'='${value}';g' .config
		done
		
		# Bugs in use of std C and linux headers
		pushd networking >/dev/null
			cp ifconfig.c ifconfig.c.orig
			sed -i -e 's;^# include <net/if_slip.h>;# include <linux/if_slip.h>;g' ifconfig.c
			
			pushd libiproute >/dev/null
				cp iplink.c iplink.c.orig
				sed -i -e '/^#include <net\/if_packet.h>/d' iplink.c
			popd >/dev/null
			
			cp tcpudp.c tcpudp.c.orig
			sed -i -e '/^#include <linux\/netfilter_ipv4.h>/d' tcpudp.c
			
			# Not needed, as linux/mii.h includes ethtool.h
			cp ifplugd.c ifplugd.c.orig
			#sed -i -e '/^#include <linux\/ethtool.h>/d' ifplugd.c
			sed -i -e '/^# include <net\/ethernet.h>/d' ifplugd.c
			
		popd >/dev/null
		
		# We also use -Wno-cpp to suppress errors about redirections in std c lib headers
		
		# Setting CROSS_COMPILE means AS, CC, LD, CPP, AR, NM, STRIP, OBJCOPY, OBJDUMP and PKG_CONFIG are all set to ${CROSS_COMPILE}PROGNAME, and so should be on the path
		#  - Does not seem to use TARGETCC despite using HOSTCC
		# HOSTLDFLAGS are from the perspective of CC (not LD); they are used for linking
		#  - Busybox, based on the Linux Kconfig system, does not re-use CFLAGS (or CXXFLAGS) when linking to create host executables
		#  - LD is actually CC or CXX
		#  - HOSTLDFLAGS may be used with either CC or CXX when linking
		#  - HOST_LOADLIBES is used for libraries to link, eg -ldl, and comes AFTER the object list (which is very sane)
		#  - Also HOST_EXTRACFLAGS, HOST_EXTRACXXFLAGS, HOST_EXTRACFLAGS_xxx, HOST_EXTRACXXFLAGS_xxx, HOST_LOADLIBES, HOST_LOADLIBES_xxx, HOST_LDFLAGS, HOST_LLD
		#  - _xxx are specific targets, eg _conf and _conf.o 
		PATH="$PATH" \
		make \
			--jobs $LFS_MAKE_JOBS \
			--debug \
			--print-directory \
			V=2 \
			HOSTCC="$LFS_C_HOST_CC" \
			HOSTCXX="$LFS_C_HOST_CXX" \
			HOSTLD="$LFS_C_HOST_LD" \
			HOSTCFLAGS="$LFS_C_HOST_CFLAGS" \
			HOSTCXXFLAGS="$LFS_C_HOST_CXXFLAGS" \
			HOSTLDFLAGS="$LFS_C_HOST_CFLAGS" \
			CROSS_COMPILE="$LFS_C_TARGET_EXTERNAL_PREFIX" \
			CFLAGS="$LFS_C_TARGET_EXTERNAL_CFLAGS -Wno-cpp ${busyboxConfiguration["CONFIG_EXTRA_CFLAGS"]}" \
		all

		PATH="$PATH" \
		make \
			--jobs $LFS_MAKE_JOBS \
			V=2 \
			HOSTCC="$LFS_C_HOST_CC" \
			HOSTCXX="$LFS_C_HOST_CXX" \
			HOSTLD="$LFS_C_HOST_LD" \
			HOSTCFLAGS="$LFS_C_HOST_CFLAGS" \
			HOSTCXXFLAGS="$LFS_C_HOST_CXXFLAGS" \
			HOSTLDFLAGS="$LFS_C_HOST_CFLAGS" \
			CROSS_COMPILE="$LFS_C_TARGET_EXTERNAL_PREFIX" \
			CFLAGS="$LFS_C_TARGET_EXTERNAL_CFLAGS -Wno-cpp ${busyboxConfiguration["CONFIG_EXTRA_CFLAGS"]}" \
		install
	
	popdDependencyFolder
}
