set -o errexit +o hashall

version 1.21.1
{
	depends musl-cross
	depends selinux
	
	make_setuid_binary "suid/busybox-suid"
	make_capabilities_binary "iputils/busybox-iputils" "cap_net_raw+ep"
	
	install_binaries_in_paths suid capabilities bin
	install_system_binaries_in_paths sbin
}

# Note: applets.h is generated
# This code is not perfect, includes redundancy and could be fooled by mistakes
# grep -F IF_ include/applets.h | sed -e 's;/\*;;g' -e 's;\*/;;g' -e 's;//;;g' -e 's;^ ;;g' -e 's; $;;g' -e 's;^IF_.*(;;g' -e 's;))$;;g' -e 's;, ; ;g' -e 's;^ *;;g' | awk 'NF == 3 {print $1,$2,$3 }; NF == 5 {print $1,$3,$4}' | sed -e 's;BB_SUID_;;g' -e 's;BB_DIR_;;g' -e 's;USR_;;g' | awk '{print $3,"/" tolower($2),$1}' | sort --reverse --unique

function install_crosscompiler_busybox()
{
	# libselinux depends on libpcre
	local -r prceRelativeInstallPath="$(dependencyPath pcre)"/install
	local -r prceAbsoluteInstallPath="${LFS}${prceRelativeInstallPath}"
	
	# busybox selinux functionality
	local -r selinuxRelativeInstallPath="$(dependencyPath selinux)"/install
	local -r selinuxAbsoluteInstallPath="${LFS}${selinuxRelativeInstallPath}"
	
	echo ${selinuxAbsoluteInstallPath}/usr/include
	exit 50
	
	# UID and GID
	local -ir inclusiveUserId=${settings_integer[LFS_INCLUSIVE_USER_UID]}
	local -ir lastSystemId=$((inclusiveUserId-1))
	
	# Applets
	local -ar suidRequiredApplets=(WALL VLOCK SU PASSWD LOGIN CRONTAB)
	# ping and ping6 (and probably traceroute / traceroute6) can use capabilities:  cap_net_raw=ep /bin/ping (and probably also traceroute)
	# FINDFS is technically suid maybe, but is not useful to other than root
	local -ar suidMaybeApplets=(TRACEROUTE6 TRACEROUTE PING6 PING)
	# TEST is the name for '[' and '[['
	local -ar binApplets=(TEST AR ASH AWK BASE64 BASENAME BEEP BUNZIP2 BZCAT BZIP2 CAL CAT CATV CHATTR CHGRP CHMOD CHOWN CHRT CHVT CKSUM CLEAR CMP COMM CONSPY CP CPIO CRYPTPW CTTYHACK CUT DATE DC DD DEALLOCVT DF DIFF DIRNAME DMESG DNSDOMAINNAME DOS2UNIX DPKG DPKG_DEB DU DUMPKMAP DUMPLEASES ECHO ED EGREP EJECT ENV EXPAND EXPR FALSE FDFLUSH FGCONSOLE FGREP FIND FLOCK FOLD FREE FSYNC FTPGET FTPPUT FUSER GETOPT GREP GROUPS GUNZIP GZIP HD HEAD HEXDUMP HOSTID HOSTNAME ID INSTALL IONICE IOSTAT IPCALC IPCRM IPCS KBD_MODE KILL KILLALL LAST LESS LINUX32 LINUX64 LN LOGGER LOGNAME LS LSATTR LSOF LSPCI LSUSB LZCAT LZMA LZOP LZOPCAT MAKEMIME MD5SUM MESG MICROCOM MKDIR MKFIFO MKNOD MKPASSWD MKTEMP MORE MOUNT MOUNTPOINT MPSTAT MT MV NC NETSTAT NICE NMETER NOHUP NSLOOKUP OD OPENVT PATCH PGREP PIDOF PING PING6 PIPE_PROGRESS PKILL PMAP PRINTENV PRINTF PS PSCAN PSTREE PWD PWDX READLINK REALPATH REFORMIME RENICE RESET RESIZE REV RM RMDIR RPM RPM2CPIO RUN_PARTS RX SCRIPT SCRIPTREPLAY SED SEQ SETARCH SETKEYCODES SETSERIAL SETSID SH SHA1SUM SHA256SUM SHA3SUM SHA512SUM SHOWKEY SLEEP SMEMCAP SORT SPLIT STAT STRINGS STTY SUM SYNC TAC TAIL TAR TASKSET TCPSVD TEE TELNET TEST TFTP TIME TIMEOUT TOP TOUCH TR TRACEROUTE TRACEROUTE6 TRUE TTY TTYSIZE UDHCPC6 UMOUNT UNAME UNCOMPRESS UNEXPAND UNIQ UNIX2DOS UNLZMA UNLZOP UNXZ UNZIP UPTIME USERS USLEEP UUDECODE UUENCODE VI VOLNAME WATCH WC WHICH WHO WHOAMI WHOIS XARGS XZ XZCAT YES ZCAT)
	local -ar sbinApplets=(ACPID ADDGROUP ADDUSER ADJTIMEX ARP ARPING BLKID BLOCKDEV BOOTCHARTD BRCTL CHAT CHPASSWD CHROOT CROND DELGROUP DELUSER DEPMOD DEVMEM DHCPRELAY ETHER_WAKE FBSET FBSPLASH FDFORMAT FDISK FREERAMDISK FSCK FSCK_MINIX GETTY HALT HDPARM HWCLOCK IFCONFIG IFDOWN IFENSLAVE IFPLUGD IFUP INETD INIT INOTIFYD INSMOD IP IPADDR IPLINK IPROUTE IPRULE IPTUNNEL KILLALL5 KLOGD LOADFONT LOADKMAP LOGREAD LOSETUP LSMOD MAKEDEVS MAN MDEV MKDOSFS MKE2FS MKFS_EXT2 MKFS_MINIX MKFS_REISER MKFS_VFAT MKSWAP MODINFO MODPROBE NAMEIF NANDDUMP NANDWRITE NBD_CLIENT NTPD PIVOT_ROOT POPMAILDIR POWEROFF POWERTOP RAIDAUTORUN RDATE RDEV READAHEAD READPROFILE REBOOT RMMOD ROUTE RTCWAKE RUNLEVEL SENDMAIL SETCONSOLE SETFONT SETLOGCONS SLATTACH START_STOP_DAEMON SULOGIN SWAPOFF SWAPON SWITCH_ROOT SYSCTL SYSLOGD TFTPD TUNCTL TUNE2FS UBIATTACH UBIDETACH UBIMKVOL UBIRMVOL UBIRSVOL UBIUPDATEVOL UDHCPC UDHCPD VCONFIG WATCHDOG)

	function package_crosscompiler_busybox_setQuotedBusyboxConfigurationParameter()
	{
		local -r key=CONFIG_"$1"
		local -r unquotedValue="$2"
		
		local -r quotedValue='"'${unquotedValue}'"'
		package_crosscompiler_busybox_currentBusyboxConfiguration["$key"]="$quotedValue"
	}
	
	function package_crosscompiler_busybox_setUnquotedBusyboxConfigurationParameter()
	{
		local -r key=CONFIG_"$1"
		local -r unquotedValue="$2"
		package_crosscompiler_busybox_currentBusyboxConfiguration["$key"]="$unquotedValue"
	}
	
	function package_crosscompiler_busybox_writeNewConfig()
	{
		rm -rf .config
		
		local key
		local value
		
		local -a sedExpressions=()
		for key in "${!package_crosscompiler_busybox_currentBusyboxConfiguration[@]}"
		do
			value="${package_crosscompiler_busybox_currentBusyboxConfiguration["$key"]}"
		
			# Remove any existing commented key-value (for clarity) or key-value
			sedExpressions+=('-e' '/^# '${key}'=.*$/d')
			sedExpressions+=('-e' '/^'${key}'=.*$/d')
			
			echo "${key}=${value}" >>.config
		done

		sed "${sedExpressions[@]}" "$LFS_DEPENDENCY_PACKAGE_PATH"/config >>.config
	}
	
	function package_crosscompiler_busybox_configureApplets()
	{
		local -r yesOrNo="$1"
		shift 1
		
		local applet
		for applet in "$@"
		do
			package_crosscompiler_busybox_setUnquotedBusyboxConfigurationParameter $applet "$yesOrNo"
		done
	}
	
	function package_crosscompiler_busybox_build()
	{
		local -r variety="$1"
		local -r suidRequired="$2"
		local -r suidMaybe="$3"
		local -r sbin="$4"
		local -r bin="$5"
		
		local -r prefix=../../install/"$variety"
		
		PATH="$PATH" \
		make \
			--jobs $LFS_MAKE_JOBS \
			--debug \
			--print-directory \
			V=2 \
			distclean
		
		declare -Ag package_crosscompiler_busybox_currentBusyboxConfiguration=()
		
		package_crosscompiler_busybox_setQuotedBusyboxConfigurationParameter CROSS_COMPILER_PREFIX "$LFS_C_TARGET_EXTERNAL_PREFIX"
		package_crosscompiler_busybox_setQuotedBusyboxConfigurationParameter SYSROOT "$LFS_C_TARGET_EXTERNAL_SYS_ROOT"
		package_crosscompiler_busybox_setQuotedBusyboxConfigurationParameter EXTRA_CFLAGS "-I${selinuxAbsoluteInstallPath}/usr/include"
		package_crosscompiler_busybox_setQuotedBusyboxConfigurationParameter EXTRA_LDFLAGS "-L${selinuxAbsoluteInstallPath}/usr/lib -L${prceAbsoluteInstallPath}/lib"
		package_crosscompiler_busybox_setQuotedBusyboxConfigurationParameter EXTRA_LDLIBS "pcre sepol selinux"
		package_crosscompiler_busybox_setQuotedBusyboxConfigurationParameter DEFAULT_MODULES_DIR "/lib/modules"
		package_crosscompiler_busybox_setQuotedBusyboxConfigurationParameter DEFAULT_DEPMOD_FILE "modules.dep"
		package_crosscompiler_busybox_setQuotedBusyboxConfigurationParameter FEATURE_CROND_DIR "/var/spool/cron"
		package_crosscompiler_busybox_setQuotedBusyboxConfigurationParameter IFUPDOWN_IFSTATE_PATH "/var/run/ifstate"
		package_crosscompiler_busybox_setQuotedBusyboxConfigurationParameter DHCPD_LEASES_FILE "/var/lib/misc/udhcpd.leases"
		package_crosscompiler_busybox_setQuotedBusyboxConfigurationParameter UDHCPC_DEFAULT_SCRIPT "/usr/share/udhcpc/default.script"
		
		# We disable this because it requires GNU libc regex
		package_crosscompiler_busybox_setUnquotedBusyboxConfigurationParameter FEATURE_VI_REGEX_SEARCH n
		# We disable this because it makes grep.c (and not yet, awk.c) use GNU regex
		package_crosscompiler_busybox_setUnquotedBusyboxConfigurationParameter EXTRA_COMPAT n
		package_crosscompiler_busybox_setUnquotedBusyboxConfigurationParameter FIRST_SYSTEM_ID ${settings_integer[LFS_INCLUSIVE_SYSTEM_UID]}
		package_crosscompiler_busybox_setUnquotedBusyboxConfigurationParameter LAST_SYSTEM_ID $lastSystemId
		# musl does not support rpc/rpc.h
		package_crosscompiler_busybox_setUnquotedBusyboxConfigurationParameter FEATURE_HAVE_RPC n
		package_crosscompiler_busybox_setUnquotedBusyboxConfigurationParameter FEATURE_INETD_RPC n
		
		package_crosscompiler_busybox_setQuotedBusyboxConfigurationParameter PREFIX "$prefix"

		package_crosscompiler_busybox_setUnquotedBusyboxConfigurationParameter FEATURE_SUID $suidRequired
		package_crosscompiler_busybox_setUnquotedBusyboxConfigurationParameter FEATURE_SUID_CONFIG n
		package_crosscompiler_busybox_setUnquotedBusyboxConfigurationParameter FEATURE_SUID_CONFIG_QUIET n
		package_crosscompiler_busybox_setUnquotedBusyboxConfigurationParameter FEATURE_SELINUX $sbin
		package_crosscompiler_busybox_configureApplets $suidRequired "${suidRequiredApplets[@]}"
		package_crosscompiler_busybox_configureApplets $suidMaybe "${suidMaybeApplets[@]}"
		package_crosscompiler_busybox_configureApplets $sbin "${sbinApplets[@]}"
		package_crosscompiler_busybox_configureApplets $bin "${binApplets[@]}"

		package_crosscompiler_busybox_writeNewConfig
		
		# We also use -Wno-cpp to suppress errors about redirections in std c lib headers
		
		# Setting CROSS_COMPILE means AS, CC, LD, CPP, AR, NM, STRIP, OBJCOPY, OBJDUMP and PKG_CONFIG are all set to ${CROSS_COMPILE}PROGNAME, and so should be on the path
		#  - Does not seem to use TARGETCC despite using HOSTCC
		# HOSTLDFLAGS are from the perspective of CC (not LD); they are used for linking
		#  - Busybox, based on the Linux Kconfig system, does not re-use CFLAGS (or CXXFLAGS) when linking to create host executables
		#  - LD is actually CC or CXX
		#  - HOSTLDFLAGS may be used with either CC or CXX when linking
		#  - HOST_LOADLIBES is used for libraries to link, eg -ldl, and comes AFTER the object list (which is very sane)
		#  - Also HOST_EXTRACFLAGS, HOST_EXTRACXXFLAGS, HOST_EXTRACFLAGS_xxx, HOST_EXTRACXXFLAGS_xxx, HOST_LOADLIBES, HOST_LOADLIBES_xxx, HOST_LDFLAGS, HOST_LLD
		#  - _xxx are specific targets, eg _conf and _conf.o
		PATH="$PATH" \
		make \
			--jobs $LFS_MAKE_JOBS \
			--debug \
			--print-directory \
			V=2 \
			HOSTCC="$LFS_C_HOST_CC" \
			HOSTCXX="$LFS_C_HOST_CXX" \
			HOSTLD="$LFS_C_HOST_LD" \
			HOSTCFLAGS="$LFS_C_HOST_CFLAGS" \
			HOSTCXXFLAGS="$LFS_C_HOST_CXXFLAGS" \
			HOSTLDFLAGS="$LFS_C_HOST_CFLAGS" \
			CROSS_COMPILE="$LFS_C_TARGET_EXTERNAL_PREFIX" \
			CFLAGS="$LFS_C_TARGET_EXTERNAL_CFLAGS -Wno-cpp ${busyboxConfiguration["CONFIG_EXTRA_CFLAGS"]}" \
		all

		mkdir -m 0755 -p "$prefix"
		mv ./busybox "$prefix"/busybox-"$variety"
		
		local binary
		while IFS= read -r -d $'\n' binary
		do
			ln -s busybox-"$prefix" "$prefix"/busybox-"$variety"
		done < <("$prefix"/busybox-"$variety" --list)
	}
	
	pushdDependencyFolder
		
		# Bugs in use of std C and linux headers
		pushd networking >/dev/null
			cp ifconfig.c ifconfig.c.orig
			sed -i -e 's;^# include <net/if_slip.h>;# include <linux/if_slip.h>;g' ifconfig.c
			
			pushd libiproute >/dev/null
				cp iplink.c iplink.c.orig
				sed -i -e '/^#include <net\/if_packet.h>/d' iplink.c
			popd >/dev/null
			
			cp tcpudp.c tcpudp.c.orig
			sed -i -e '/^#include <linux\/netfilter_ipv4.h>/d' tcpudp.c
			
			# Double-include of ethhdr
			cp ifplugd.c ifplugd.c.orig
			sed -i -e '/^# include <net\/ethernet.h>/d' ifplugd.c
			
		popd >/dev/null
		
		# Suid required build
		package_crosscompiler_busybox_build "suid" y n n n
		
		# Suid maybe build (to allow file system capabilities to be used instead)
		package_crosscompiler_busybox_build "iputils" n y n n
		
		# System binaries build
		package_crosscompiler_busybox_build "sbin" n n y n
		
		# Normal build
		package_crosscompiler_busybox_build "bin" n n n y
	
	popdDependencyFolder
}
