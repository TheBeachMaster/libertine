set -o errexit +o hashall

version 1.1.8
{
	include config "${settings_string[LFS_AUTOTOOLS_CONFIG_VERSION]}"
	depends musl-cross
	depends selinux
	depends cracklib
	
	remove_unwanted share doc
	
	doc_resources . share
	
	compile_resources . include
	
	compile_resources lib \
		libpam.a \
		libpamc.a \
		libpam_misc.a \
	
	compile_resources lib \
		libpam.la \
		libpamc.la \
		libpam_misc.la
	
	compile_resources lib/security \
		pam_access.a \
		pam_deny.a \
		pam_echo.a \
		pam_env.a \
		pam_exec.a \
		pam_faildelay.a \
		pam_filter.a \
		pam_keyinit.a \
		pam_lastlog.a \
		pam_limits.a \
		pam_listfile.a \
		pam_localuser.a \
		pam_loginuid.a \
		pam_mkhomedir.a \
		pam_namespace.a \
		pam_rootok.a \
		pam_securetty.a \
		pam_shells.a \
		pam_stress.a \
		pam_succeed_if.a \
		pam_tally2.a \
		pam_timestamp.a \
		pam_umask.a \
		pam_unix.a \
		pam_warn.a
	
	compile_resources lib/security \
		pam_access.la \
		pam_deny.la \
		pam_echo.la \
		pam_env.la \
		pam_exec.la \
		pam_faildelay.la \
		pam_filter.la \
		pam_keyinit.la \
		pam_lastlog.la \
		pam_limits.la \
		pam_listfile.la \
		pam_localuser.la \
		pam_loginuid.la \
		pam_mkhomedir.la \
		pam_namespace.la \
		pam_rootok.la \
		pam_securetty.la \
		pam_shells.la \
		pam_stress.la \
		pam_succeed_if.la \
		pam_tally2.la \
		pam_timestamp.la \
		pam_umask.la \
		pam_unix.la \
		pam_warn.la
	
	strip_unneeded lib \
		libpam.a \
		libpamc.a \
		libpam_misc.a
	
	strip_unneeded lib \
		libpam.so \
		libpamc.so \
		libpam_misc.so
	
	strip_unneeded lib/security \
		pam_access.a \
		pam_deny.a \
		pam_echo.a \
		pam_env.a \
		pam_exec.a \
		pam_faildelay.a \
		pam_filter.a \
		pam_keyinit.a \
		pam_lastlog.a \
		pam_limits.a \
		pam_listfile.a \
		pam_localuser.a \
		pam_loginuid.a \
		pam_mkhomedir.a \
		pam_namespace.a \
		pam_rootok.a \
		pam_securetty.a \
		pam_shells.a \
		pam_stress.a \
		pam_succeed_if.a \
		pam_tally2.a \
		pam_timestamp.a \
		pam_umask.a \
		pam_unix.a \
		pam_warn.a
	
	strip_unneeded lib/security \
		pam_access.so \
		pam_deny.so \
		pam_echo.so \
		pam_env.so \
		pam_exec.so \
		pam_faildelay.so \
		pam_filter.so \
		pam_keyinit.so \
		pam_lastlog.so \
		pam_limits.so \
		pam_listfile.so \
		pam_localuser.so \
		pam_loginuid.so \
		pam_mkhomedir.so \
		pam_namespace.so \
		pam_rootok.so \
		pam_securetty.so \
		pam_shells.so \
		pam_stress.so \
		pam_succeed_if.so \
		pam_tally2.so \
		pam_timestamp.so \
		pam_umask.so \
		pam_unix.so \
		pam_warn.so
	
	strip_unneeded sbin \
		unix_chkpwd \
		mkhomedir_helper \
		pam_tally2 \
		pam_timestamp_check \
		unix_update
	
	# Need to have group set to 'shadow'
	setgid_binaries sbin unix_chkpwd
	
	install_system_binaries sbin \
		unix_chkpwd \
		mkhomedir_helper \
		pam_tally2 \
		pam_timestamp_check \
		unix_update
}

function install_crosscompiler_linux-pam()
{
	# libselinux depends on libpcre
	local -r prceRelativeInstallPath="$(dependencyPath pcre)"/install
	local -r prceAbsoluteInstallPath="${LFS}${prceRelativeInstallPath}"

	# selinux functionality
	local -r selinuxRelativeInstallPath="$(dependencyPath selinux)"/install
	local -r selinuxAbsoluteInstallPath="${LFS}${selinuxRelativeInstallPath}"
	
	local -r muslCrossRelativeInstallPath="$(dependencyPath musl-cross)"/install
	local -r muslCrossAbsoluteInstallPath="${LFS}${muslCrossRelativeInstallPath}"
	
	local -r cracklibRelativeInstallPath="$(dependencyPath cracklib)"/install
	local -r cracklibAbsoluteInstallPath="${LFS}${cracklibRelativeInstallPath}"
	
	local -r emptyIncludeFolder="$muslCrossAbsoluteInstallPath"/"$LFS_FOREIGN_TRIPLE"/include

	# Removes:-
	#  rhosts as it depends on unsupported features in musl
	#  xauth as it uses X (which we don't use)
	#  wheel as we don't use it
	#  motd likewise (ssh has its own banners)
	#  userdb (unnecessary)
	#  tally (defunct)
	#  time (obsolecent; why restrict logins to certain times in this day and age when not using shared lines)
	#  pam_pwhistory (stores passwords potentially recoverably)
	#  permit (insecure)
	#  nologin (security risk)
	#  mail (old-fashioned and of limited use in a server or desktop today)
	#  issue (cute but we can do without it)
	#  group (security risk; unnecessary extra complexity in addition to /etc/group)
	#  ftp as it is insecure
	#  debug (unnecessary)
	function removeModules()
	{
		pushd linux-pam >/dev/null

			cp -a configure configure.orig
			
			pushd modules >/dev/null
			
				cp -a Makefile.am Makefile.am.orig
				cp -a Makefile.in Makefile.in.orig
			
			popd >/dev/null
			
			local moduleName
			for moduleName in "$@"
			do
				local module=pam_"$moduleName"
			
					sed -i -e "s;[[:space:]]modules/pam\_${moduleName}/Makefile;;g" configure
			
					sed -i -r -e '/\"modules\/pam\_'"${moduleName}"'\/Makefile\"/d' configure
		
					pushd modules >/dev/null
			
						rm -r "$module"
						
						sed -i -e "s/[[:space:]]pam\_${moduleName}[[:space:]]/ /g" Makefile.am
						sed -i -e "s/[[:space:]]pam\_${moduleName}$/ /g" Makefile.am
						
						sed -i -e "s/[[:space:]]pam\_${moduleName}[[:space:]]/ /g" Makefile.in
						sed -i -e "s/[[:space:]]pam\_${moduleName}$/ /g" Makefile.in
			
					popd >/dev/null
			done
			
		popd >/dev/null
	}
	removeModules rhosts xauth wheel motd userdb tally time pwhistory permit nologin mail issue group ftp debug
	
	# Linux PAM does not respect the configure-time non-detection of innetgr!
	function patchWithMissingDummyInnetgr()
	{	
		pushd linux-pam/modules >/dev/null
		
			local moduleName
			local module
			local fileToPatch
			for moduleName in "$@"
			do
				module=pam_"$moduleName"
				fileToPatch="$module"/"$module".c
				
				# True if we've removed the module above (eg pam_time)
				if [ ! -f "$fileToPatch" ]; then
					continue
				fi
				
				mv "$fileToPatch" "$fileToPatch".orig
		
				cat >"$fileToPatch" <<-EOF
					static int innetgr (const char *netgroup, const char *host, const char *user, const char *domain)
					{
					    return 0;
					}
			
				EOF
		
				cat "$fileToPatch".orig >>"$fileToPatch"
			done
			
		popd >/dev/null
	}
	patchWithMissingDummyInnetgr group time succeed_if
	
	function fixMakefilesAm()
	{
		local makefile
		while IFS= read -r -d $'\0' makefile
		do
			cp -a "$makefile" "$makefile".orig
			
			sed -i -e 's/@LIBCRYPT@ //g' "$makefile"
			sed -i -e 's/ @LIBCRYPT@//g' "$makefile"
			sed -i -e 's/\$(LIBCRYPT) //g' "$makefile"
			sed -i -e 's/ $(LIBCRYPT)//g' "$makefile"
			
			sed -i -e 's/@NIS_LIBS@ //g' "$makefile"
			sed -i -e 's/ @NIS_LIBS@//g' "$makefile"
			sed -i -e 's/\$(NIS_LIBS) //g' "$makefile"
			sed -i -e 's/ $(NIS_LIBS)//g' "$makefile"
			
			sed -i -e 's/@LIBSELINUX@/-lselinux -lsepol -lpcre/g' "$makefile"
			
			touch -r "$makefile".orig "$makefile"
		done < <(find -L linux-pam -name 'Makefile.am' -print0)
	}
	fixMakefilesAm
	
	function fixMakefilesIn()
	{
		local makefile
		while IFS= read -r -d $'\0' makefile
		do
			cp -a "$makefile" "$makefile".orig
			
			sed -i -e 's/^LIBCRYPT =.*$/LIBCRYPT =/g' "$makefile"
			sed -i -e 's/ @LIBCRYPT@//g' "$makefile"
			sed -i -e 's/@LIBCRYPT@ //g' "$makefile"
			sed -i -e 's/ $(LIBCRYPT)//g' "$makefile"
			sed -i -e 's/\$(LIBCRYPT) //g' "$makefile"
			
			sed -i -e 's/^NIS_LIBS =.*$/NIS_LIBS =/g' "$makefile"
			sed -i -e 's/ @NIS_LIBS@//g' "$makefile"
			sed -i -e 's/@NIS_LIBS@ //g' "$makefile"
			sed -i -e 's/ $(NIS_LIBS)//g' "$makefile"
			sed -i -e 's/\$(NIS_LIBS) //g' "$makefile"
			
			sed -i -e 's/@LIBSELINUX@/-lselinux -lsepol -lpcre/g' "$makefile"
			
			touch -r "$makefile".orig "$makefile"
		done < <(find -L linux-pam -name 'Makefile.in' -print0)
	}
	fixMakefilesIn
			
	# Remove pam_conv1, it uses Flex, requires extra libraries and frankly is a pain
	sed -i -e 's/^SUBDIRS =.*$/SUBDIRS =/g' linux-pam/conf/Makefile.in
	sed -i -e 's/^SUBDIRS =.*$/SUBDIRS = libpam libpamc libpam_misc modules doc/g' linux-pam/Makefile.in
	
	# Remove specs as it uses Flex
	sed -i -e 's/^SUBDIRS =.*$/SUBDIRS = man sag adg mwg/g' linux-pam/doc/Makefile.in
	
	function package_crosscompiler_linux_pam_fixMakefiles()
	{
		cp libtool libtool.orig
		local -r replacement='hardcode_libdir_flag_spec="-Wl,-rpath=\\$libdir -Wl,-rpath-link='${LFS}'/\\$libdir"'
		
		sed -i -e 's;hardcode_libdir_flag_spec="\\${wl}-rpath \\${wl}\\$libdir";'"${replacement}"';g' libtool
	}
	
	LFS_C_TARGET_EXTERNAL_CFLAGS="$LFS_C_TARGET_EXTERNAL_CFLAGS -I${selinuxAbsoluteInstallPath}/usr/include -I${cracklibAbsoluteInstallPath}/include" \
	LFS_C_TARGET_EXTERNAL_LDFLAGS="$LFS_C_TARGET_EXTERNAL_LDFLAGS -L${selinuxAbsoluteInstallPath}/usr/lib -L${prceAbsoluteInstallPath}/lib -L${cracklibAbsoluteInstallPath}/lib" \
	buildUsingAutotoolsExternal package_crosscompiler_linux_pam_fixMakefiles \
		--oldincludedir="$emptyIncludeFolder" \
		--enable-shared \
		--enable-static \
		--disable-static-modules \
		--disable-dependency-tracking \
		--enable-pie \
		--disable-nls \
		--disable-rpath \
		--disable-prelude \
		--enable-pamlocking \
		--enable-read-both-confs \
		--enable-audit \
		--disable-db \
		--disable-nis \
		--enable-selinux \
		--enable-cracklib \
		--disable-regenerate-docu \
		--with-pic \
		--with-gnu-ld \
		--with-mailspool=/var/spool/mail \
		--without-xauth \
	    --without-xml-catalog \
		--without-libiconv-prefix \
		--without-libintl-prefix
}
