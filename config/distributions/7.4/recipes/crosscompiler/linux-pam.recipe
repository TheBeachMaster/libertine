set -o errexit +o hashall

version 1.1.8
{
	include config "${settings_string[LFS_AUTOTOOLS_CONFIG_VERSION]}"
	depends musl-cross
	depends selinux
	
	setuid_binaries sbin unix_chkpwd
	
	# todo: strip, compiler resources, etc
	
	install_system_binaries sbin unix_chkpwd
}

function install_crosscompiler_linux-pam()
{
	local -r muslCrossRelativeInstallPath="$(dependencyPath musl-cross)"/install
	local -r muslCrossAbsoluteInstallPath="${LFS}${muslCrossRelativeInstallPath}"
	
	local -r emptyIncludeFolder="$muslCrossAbsoluteInstallPath"/"$LFS_FOREIGN_TRIPLE"/include

	# Removes:-
	#  rhosts as it depends on unsupported features in musl
	#  xauth as it uses X (which we don't use)
	#  wheel as we don't use it
	#  motd likewise (ssh has its own banners)
	#  userdb (unnecessary)
	#  tally (defunct)
	#  time (obsolecent; why restrict logins to certain times in this day and age when not using shared lines)
	#  pam_pwhistory (stores passwords potentially recoverably)
	#  permit (insecure)
	#  nologin (security risk)
	#  mail (old-fashioned and of limited use in a server or desktop today)
	#  issue (cute but we can do without it)
	#  group (security risk; unnecessary extra complexity in addition to /etc/group)
	#  ftp as it is insecure
	#  debug (unnecessary)
	function removeModules()
	{
		local moduleName
		for moduleName in "$@"
		do
			local module=pam_"$moduleName"
		
			pushd linux-pam >/dev/null
			
				if [ ! -f configure.orig ]; then
					cp configure configure.orig
				fi
			
				sed -i -e "s; modules/pam\_${moduleName}/Makefile;;g" configure
			
				sed -i -r -e '/\"modules\/pam\_'"${moduleName}"'\/Makefile\"/d' configure
		
				pushd modules >/dev/null
			
					rm -r "$module"
			
					if [ ! -f Makefile.in.orig ]; then
						cp Makefile.in Makefile.in.orig
					fi
					sed -i -e "s/pam\_${moduleName} //g" Makefile.in
			
					if [ ! -f Makefile.am.orig ]; then
						cp Makefile.am Makefile.am.orig
					fi
					sed -i -e "s/pam\_${moduleName} //g" Makefile.am
			
				popd >/dev/null
			
			popd >/dev/null
		done
	}
	removeModules rhosts xauth wheel motd userdb tally time pwhistory permit nologin mail issue group ftp debug
	
	# Linux PAM does not respect the configure-time non-detection of innetgr!
	function patchWithMissingDummyInnetgr()
	{	
		pushd linux-pam/modules >/dev/null
		
			local moduleName
			local module
			local fileToPatch
			for moduleName in "$@"
			do
				module=pam_"$moduleName"
				fileToPatch="$module"/"$module".c
				
				# True if we've removed the module above (eg pam_time)
				if [ ! -f "$fileToPatch" ]; then
					continue
				fi
				
				mv "$fileToPatch" "$fileToPatch".orig
		
				cat >"$fileToPatch" <<-EOF
					static int innetgr (const char *netgroup, const char *host, const char *user, const char *domain)
					{
					    return 0;
					}
			
				EOF
		
				cat "$fileToPatch".orig >>"$fileToPatch"
			done
			
		popd >/dev/null
	}
	patchWithMissingDummyInnetgr group time succeed_if
		
	function package_crosscompiler_linux_pam_fixMakefiles()
	{
		cp libtool libtool.orig
		local -r replacement='hardcode_libdir_flag_spec="-Wl,-rpath=\\$libdir -Wl,-rpath-link='${LFS}'/\\$libdir"'
		
		sed -i -e 's;hardcode_libdir_flag_spec="\\${wl}-rpath \\${wl}\\$libdir";'"${replacement}"';g' libtool
		
		# autoconf really is pathetic
		local makefile
		while IFS= read -r -d $'\0' makefile
		do
			# SELinux detection in configure fails because it looks in the current sysroot
			# Add libsepol and libpcre to anything requiring selinux (only for static compiling)
			# LIBCRYPT is incorrectly set to -l in some places
			cp "$makefile" "$makefile".orig
			sed -i -e 's/^LIBSELINUX =.*$/LIBSELINUX = -lselinux -lsepol -lpcre/g' "$makefile"
			sed -i -e 's/^LIBCRYPT =.*$/LIBCRYPT = -lcrypt/g' "$makefile"
			cp "$makefile" "$makefile".patched
			
			if [ -f "$makefile".in ]; then
				# Weirdly, pam_unix's Makefile seems to be recreated during the build
				cp "$makefile".in "$makefile".in.orig
				sed -i -e 's/^LIBSELINUX =.*$/LIBSELINUX = -lselinux -lsepol -lpcre/g' "$makefile".in
				sed -i -e 's/^LIBCRYPT =.*$/LIBCRYPT = -lcrypt/g' "$makefile".in
				cp "$makefile" "$makefile".in.patched
			fi
			
		done < <(find . -name 'Makefile' -print0)
		
		# Even though we --disable-nis in configure, the Make variable NIS_LIBS is still used to link against
		# As this variable is empty, it causes make to fail...
		pushd libpam >/dev/null
			
			sed -i -e 's/-l $(NIS_LIBS)  -lutil/-lutil/g' Makefile
			
			pushd modules/pam_unix >/dev/null
			
			# -l problem in pam_unix
			sed -i -e 's/^bigcrypt_LDADD =.*$/bigcrypt_LDADD =/g' Makefile
			sed -i -e 's/^bigcrypt_LDADD =.*$/bigcrypt_LDADD =/g' Makefile.in
			sed -i -e 's/^unix_chkpwd_LDADD =.*$/unix_chkpwd_LDADD =/g' Makefile
			sed -i -e 's/^unix_chkpwd_LDADD =.*$/unix_chkpwd_LDADD =/g' Makefile.in
			sed -i -e 's/^unix_update_LDADD =.*$/unix_update_LDADD =/g' Makefile
			sed -i -e 's/^unix_update_LDADD =.*$/unix_update_LDADD =/g' Makefile.in
			
			popd >/dev/null
		
		popd >/dev/null
		
		# May have been removed
		if [ -d modules/pam_pwhistory ]; then
			
			pushd modules/pam_pwhistory >/dev/null
		
				# For some reason, there's a blank '-l' flag
				sed -i -e 's;pam_pwhistory_la_LIBADD = $(top_builddir)/libpam/libpam.la -l;pam_pwhistory_la_LIBADD = $(top_builddir)/libpam/libpam.la;g' Makefile
		
			popd >/dev/null
		fi
	}
	
	##--enable-cracklib \

	buildUsingAutotoolsExternal package_crosscompiler_linux_pam_fixMakefiles \
		--oldincludedir="$emptyIncludeFolder" \
		--enable-shared \
		--enable-static \
		--disable-static-modules \
		--disable-dependency-tracking \
		--enable-pie \
		--disable-nls \
		--disable-rpath \
		--disable-prelude \
		--enable-pamlocking \
		--enable-read-both-confs \
		--enable-audit \
		--disable-db \
		--disable-nis \
		--enable-selinux \
		--disable-regenerate-docu \
		--with-pic \
		--with-gnu-ld \
		--with-mailspool=/var/spool/mail \
		--without-xauth \
	    --without-xml-catalog \
		--without-libiconv-prefix \
		--without-libintl-prefix
}
