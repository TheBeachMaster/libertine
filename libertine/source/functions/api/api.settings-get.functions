function get_setting()
{
	echo -nE "${api_settings["$1"]}"
}

function get_package_version_setting()
{
	echo -nE "${api_package_version_settings["$1"]}"
}

#LIBERTINE_AUTOTOOLS_CONFIG_VERSION (a key)
#function get_package_version_setting_autotools-config() { get_package_version_setting autotools-config }

#LIBERTINE_AUTOTOOLS_GNULIB_VERSION (a key)
#function get_package_version_setting_gnulib() { get_package_version_setting gnulib }

#LIBERTINE_FOREIGN_ARCHITECTURE (a key AND var)
function get_setting_foreign_architecture()
{
	get_setting architecture
}

#LIBERTINE_NATIVE_ARCHITECTURE (a key AND var)
function get_setting_native_architecture()
{
	get_setting native_architecture
}

function get_thirdtriple_from_architecture()
{
	# architecture
	case "$architecture" in
		
		armhf)
			echo -nE 'musleabihf'
		;;
		
		arm*)
			echo -nE 'musleabi'
		;;
		
		*)
			echo -nE 'musl'
		;;
	esac
}

#LIBERTINE_FOREIGN_TRIPLE
function get_setting_foreign_architecture_triple()
{
	local -r architecture=$(get_setting_foreign_architecture)
	echo -nE "$architecture-linux-$(get_thirdtriple_from_architecture)"
}

#LIBERTINE_NATIVE_TRIPLE
function get_setting_native_architecture_triple()
{
	local -r architecture=$(get_setting_foreign_architecture)
	echo -nE "$architecture-linux-$(get_thirdtriple_from_architecture)"
}

function get_setting_is_not_cross_compiling()
{
	test "$(get_setting_foreign_architecture_triple)" = "$(get_setting_native_architecture_triple)"
}

#LIBERTINE_LDFLAGS_DEBUGGING (a key)
function get_setting_ldflags_musl()
{
	get_setting ldflags_debugging
}

#LIBERTINE_LDFLAGS_MUSL
function get_setting_ldflags_musl()
{
	get_setting ldflags_musl
}

# was internal
function get_setting_cflags_default_optimisation()
{
	get_setting cflags_default_optimisation
}

#LIBERTINE_CFLAGS_FOREIGN_OPTIMISATION
function get_setting_cflags_optimisation()
{
	echo -nE "$(get_setting cpu_optimisation) $(get_setting_cflags_default_optimisation)"
}

#LIBERTINE_CFLAGS_NATIVE_OPTIMISATION
function get_setting_native_cflags_optimisation()
{
	echo -nE "$(get_setting native_cpu_optimisation) $(get_setting_cflags_default_optimisation)"
}

#LIBERTINE_CFLAGS_HARDENING
function get_setting_cflags_hardening()
{
	get_setting cflags_hardening
}

# was internal
function get_setting_ldflags_default_optimisation()
{
	get_setting ldflags_default_optimisation
}

#LIBERTINE_LDFLAGS_OPTIMISATION
function get_setting_ldflags_optimisation()
{
	echo -nE "$(get_setting_ldflags_default_optimisation) $(get_setting_ldflags_musl)"
}

#LIBERTINE_LDFLAGS_HARDENING
function get_setting_ldflags_hardening()
{
	get_setting ldflags_hardening
}
