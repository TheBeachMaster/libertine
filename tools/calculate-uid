#!/bin/bash -
set +o allexport -o braceexpand +o emacs -o errexit +o errtrace +o functrace +o hashall +o histexpand +o history +o ignoreeof -o interactive-comments +o keyword +o monitor +o noclobber +o noexec +o noglob +o nolog +o notify +o nounset +o onecmd +o physical +o pipefail +o posix +o verbose +o vi +o xtrace;unset BASH_ENV;unset BASH_XTRACEFD;unset CDPATH;unset ENV;unset FCEDIT;unset FIGNORE;unset FUNCNEST;unset GLOBIGNORE;unset HISTCONTROL;unset HISTFILE;unset HISTFILESIZE;unset HISTIGNORE;unset HISTSIZE;unset HISTTIMEFORMAT;unset HOSTFILE;unset IGNOREEOF;unset INPUTRC;unset MAIL;unset MAILCHECK;unset MAILPATH;unset TMOUT;umask 022

function setDebugging()
{
	# is set -x on?
	if [[ "$-" == *x* ]]; then
		export LFS_BASH_DEBUGGING="yes"
	elif [ ! -z "$LFS_BASH_DEBUGGING" ]; then
		if [ "$LFS_BASH_DEBUGGING" = "yes" ]; then
			set -x
		fi
	fi
}

function findOurNameAndPath()
{
	readonly ourName="$(basename "$0")"
	pushd "$(dirname "$0")" >/dev/null
	readonly crudeOurPath="$(pwd)"
	popd >/dev/null
}

function readPackages()
{
	local -i nextLargeNumber=100000
	local -i nextMinorNumber=0
	local lastNamePrefix="impossible"
	local -i lastNamePrefixLength
	while IFS= read -r -d$'\n' name x
	do
		if [ "$x" = "x" ]; then
			printf '%-40s %s\n' "$name" "$nextLargeNumber"
			nextMinorNumber=$((nextLargeNumber+1))
			nextLargeNumber=$((nextLargeNumber+100))
			lastNamePrefix="$name"
			lastNamePrefixLength=${#lastNamePrefix}
			continue
		fi
		
		if [ "${name:0:$lastNamePrefixLength}" = "$lastNamePrefix" ]; then
			printf '%-40s %s\n' "$name" "$nextMinorNumber"
			nextMinorNumber=$((nextMinorNumber+1))
			continue
		fi
		
		printf '%-40s %s\n' "$name" "$nextLargeNumber"
		nextMinorNumber=$((nextLargeNumber+1))
		nextLargeNumber=$((nextLargeNumber+100))
		lastNamePrefix="$name"
		lastNamePrefixLength=${#lastNamePrefix}
		
		
	
	done < <(cat "$crudeOurPath"/potential-packages)
}

function main()
{
	setDebugging
	findOurNameAndPath
	readPackages >"$crudeOurPath"/../config/7.4/recipes/package-uid
}

main "$@"
