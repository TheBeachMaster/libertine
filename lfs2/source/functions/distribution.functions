distribution_functions=()

function distribution_setConfiguration()
{
	# these settings really ought to come from a machine
	LFS_distribution_distributionName="lfs"
	LFS_distribution_distributionVersion="7.4"
	LFS_distribution_distributionMirrors="uk"
}
distribution_functions+=(distribution_setConfiguration)

distribution_namePath=""
distribution_nameVersionPath=""
distribution_mirrorsPath=""
distribution_certificateAuthoritiesPath=""
distribution_keyringsPath=""
distribution_recipesPath=""
function distribution_checkDistributionPaths()
{
	distribution_namePath="$distributionsFolder"/"$LFS_distribution_distributionName"
	if [ ! -d "$distribution_namePath" ]; then
		lfs_exitError "Distributions name path $distribution_namePath does not exist or is not a directory"
	fi
	
	distribution_nameVersionPath="$distribution_namePath"/"$LFS_distribution_distributionVersion"
	if [ ! -d "$distribution_nameVersionPath" ]; then
		lfs_exitError "Distributions version path $distribution_nameVersionPath does not exist or is not a directory"
	fi
	
	distribution_mirrorsPath="$distribution_nameVersionPath"/mirrors
	if [ ! -d "$distribution_distributionsMirrorsFolder" ]; then
		lfs_exitError "Distribution mirrors path $distribution_distributionsMirrorsFolder does not exist or is not a directory"
	fi
	
	distribution_certificateAuthoritiesPath="$distribution_nameVersionPath"/certificate-authorities
	if [ ! -d "$distribution_certificateAuthoritiesPath" ]; then
		lfs_exitError "Distribution certificate-authorities path $distribution_certificateAuthoritiesPath does not exist or is not a directory"
	fi
	
	distribution_keyringsPath="$distribution_nameVersionPath"/certificate-authorities
	if [ ! -d "$distribution_keyringsPath" ]; then
		lfs_exitError "Distribution keyrings path $distribution_keyringsPath does not exist or is not a directory"
	fi
	
	distribution_recipesPath="$distribution_nameVersionPath"/certificate-authorities
	if [ ! -d "$distribution_certificateAuthoritiesPath" ]; then
		lfs_exitError "Distribution certificate-authorities path $distribution_recipesPath does not exist or is not a directory"
	fi
}
distribution_functions+=(distribution_checkDistributionPaths)

function distribution_sourceMirrors()
{
	pushd "$distribution_mirrorsPath" 1>/dev/null 2>/dev/null

		local mirrorFile
		for mirrorFile in *.mirrors
		do
			if [ -f "$mirrorFile" ]; then
				source "$mirrorFile"
				api_reset
			fi
		done
		
		if [ -f "$LFS_distribution_distributionMirrors" ]; then
			pushd "$LFS_distribution_distributionMirrors" 1>/dev/null 2>/dev/null
				
				for mirrorFile in *.mirrors
				do
					if [ -f "$mirrorFile" ]; then
						source "$mirrorFile"
						api_reset
					fi
				done
			
			popd 1>/dev/null 2>/dev/null
		else
			lfs_message WARN "${tab}${tab}No such mirror set $LFS_distribution_distributionMirrors"
		fi
		
	popd 1>/dev/null 2>/dev/null
}
distribution_functions+=(distribution_sourceMirrors)

function distribution_sourceCertificateAuthorities()
{
	pushd "$distribution_certificateAuthoritiesPath" 1>/dev/null 2>/dev/null

		local certificateAuthorityFile
		for certificateAuthorityFile in *.certificate-authority
		do
			if [ -f "$certificateAuthorityFile" ]; then
				source "$certificateAuthorityFile"
				api_reset
			fi
		done
		
	popd 1>/dev/null 2>/dev/null
}
distribution_functions+=(distribution_sourceCertificateAuthorities)

function distribution_sourceKeyrings()
{
	pushd "$distribution_keyringsPath" 1>/dev/null 2>/dev/null

		local keyringFile
		for keyringFile in *.keyring
		do
			if [ -f "$keyringFile" ]; then
				source "$keyringFile"
				api_reset
			fi
		done
		
	popd 1>/dev/null 2>/dev/null
}
distribution_functions+=(distribution_sourceKeyrings)
