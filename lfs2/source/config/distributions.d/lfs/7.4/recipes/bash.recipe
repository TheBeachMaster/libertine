recipe bash
{
	uidgid 18
	version 4.2
	{
		depends musl-cross 394a7ccf3b4b8ab02bf736ad54368f267b06d575

		package bash "$LFS_SOURCE_PACKAGE_VERSION"
		{
			mirror GNU
			path "$name"/"$name"-"$version".tar.gz
			md5 3fb927c7c33022f1c327f14a81c0d4b0
			signed_as keyring GNU
		}

		# this is an internal package, the download of which is likely to be common...
		# we do not want it installed
		# See http://git.savannah.gnu.org/gitweb/?p=config.git
		# Original URL: http://git.savannah.gnu.org/gitweb/?p=config.git;a=snapshot;sf=tgz;h=5e4de70bb0064d974a848fbe3a445d5dafaf7b48
		# Rearranged for sanity: http://git.savannah.gnu.org/gitweb/?sf=tgz;a=snapshot;p=config.git;h=5e4de70bb0064d974a848fbe3a445d5dafaf7b48
		# Revolting URL
		# Hashes not supported as the generated tar.gz differs every time
		# See also config.include
		#source_package SAVANNAH "$LFS_SOURCE_PACKAGE_NAME".git';h='"$LFS_SOURCE_PACKAGE_VERSION" NO_DIGESTS_BECAUSE_VALUE_IS_UNIQUE_PER_DOWNLOAD "$LFS_SOURCE_PACKAGE_NAME"-"${LFS_SOURCE_PACKAGE_VERSION:0:7}" gzip
		# this version is really a function of musl-cross' version
		package autotools-config 5e4de70bb0064d974a848fbe3a445d5dafaf7b48
		{
			mirror SAVANNAH
			path config.git';h='"${version}"
			archive tarball
			archive_folder config-"${version:0:7}"
			compression gzip
			download_as "$name"."$version".tar.gz
		}
	
		# ? could we default the mirror ?
		local -i patchIndex
		local patchNumber
		local -r reducedVersion=42
		local -r maximumPatchIndex=45
		local patchName
		for ((patchIndex=1;patchIndex<=${maximumPatchIndex};++patchIndex))
		do
			if [ ${#patchIndex} -eq 1 ]; then
				local patchNumber="00${patchIndex}"
			elif [ ${#patchIndex} -eq 2 ]; then
				local patchNumber="0${patchIndex}"
			else
				local patchNumber="$patchIndex"
			fi
			patchName="${LFS_SOURCE_PACKAGE_NAME}${reducedVersion}"-"$patchNumber"
			patch "$patchName"
			{
				mirror GNU
				path "$LFS_SOURCE_PACKAGE_NAME"/"$LFS_SOURCE_PACKAGE_NAME"-"$LFS_SOURCE_PACKAGE_VERSION"-patches/"$patchName"
			}
		done

		function recipe_install_bash()
		{
			LFS_C_TARGET_EXTERNAL_CFLAGS="$LFS_C_TARGET_EXTERNAL_CFLAGS -static" LFS_C_TARGET_EXTERNAL_CXXFLAGS="$LFS_C_TARGET_EXTERNAL_CXXFLAGS -static" buildUsingAutotoolsExternal callback_empty \
				--enable-static-link \
				--with-gnu-ld \
				--disable-nls \
				--without-libiconv-prefix \
				--with-included-gettext \
				--without-libintl-prefix \
					--without-bash-malloc \
					--enable-largefile \
					--disable-net-redirections
		}

		# Post-compilation
		remove_unwanted bin bashbug

		remove_unwanted share/man/man1 bashbug.1

		doc_resources . share

		strip_unneeded bin bash

		install_binaries bin bash
	}
}
